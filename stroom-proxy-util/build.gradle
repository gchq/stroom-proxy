import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

dependencies {
    compile 'aopalliance:aopalliance:1.0'
    compile 'org.aspectj:aspectjrt:1.8.9'
    compile 'org.aspectj:aspectjweaver:1.8.9'
    compile 'cglib:cglib-nodep:3.1'

    compile 'org.apache.commons:commons-compress:1.12'
    compile 'commons-lang:commons-lang:2.6'
    compile 'commons-io:commons-io:2.5'
    compile 'javax.servlet:servlet-api:2.5'
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.6.1'
    compile 'net.sf.ehcache:ehcache-core:2.6.11'
    compile 'com.googlecode.ehcache-spring-annotations:ehcache-spring-annotations:1.2.0'

    compile 'org.springframework:spring-context:4.2.4.RELEASE'
    compile 'org.springframework:spring-core:4.2.4.RELEASE'
    compile 'org.springframework:spring-beans:4.2.4.RELEASE'
    compile 'org.springframework:spring-test:4.2.4.RELEASE'
    compile 'org.springframework:spring-aop:4.2.4.RELEASE'
    compile 'org.springframework:spring-web:4.2.4.RELEASE'
    compile 'org.springframework:spring-webmvc:4.2.4.RELEASE'
}

task writeBuildProperties {
    def propertyFile = file "${project.rootDir}/stroom-proxy-util/src/main/resources/META-INF/stroom-util-build.properties"
    def props = new Properties()

    props.setProperty("buildVersion", versions.stroomProxy)
    props.setProperty("buildDate", ZonedDateTime.now().format(DateTimeFormatter.ISO_INSTANT))

    props.store(propertyFile.newWriter(), null)
}

tasks.compileJava.dependsOn writeBuildProperties
